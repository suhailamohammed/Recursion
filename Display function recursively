//in single linked list display the nodes using recursion
#include<iostream>
using namespace std;

struct node{
    int data;
    node *next;
};

class linked_list{
    private:
    node *head, *tail;
    public:
    
    linked_list(){
        head = NULL;
        tail = NULL;
    }
    void add_node(int n){
        node *tmp = new node;
        tmp-> data = n;
        tmp-> next = NULL;
        
        if(head == NULL){
            head = tmp;
            tail = tmp;
        }
        else{
            tail -> next = tmp;
            tail = tail->next;
        }
    }
    
    node* gethead(){
        return head;
    }
    
    static void display(node *head){
        if(head == NULL){
            cout<<"NULL"<<endl;
        }
        else{
            cout<<head->data<<endl;
            return display(head->next);
        }
    }
  };

int main()
{
    linked_list a;
    linked_list b;
    //a.add_node(7);
    a.add_node(6);
    a.add_node(10);
    a.add_node(11);
    //linked_list::display(a.gethead());
   
    b.add_node(7);
    b.add_node(6);
    b.add_node(10);
    b.add_node(11);
    
    linked_list::display(a.gethead());
    linked_list::display(b.gethead());
  
    return 0;

}

